// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cn/edu/cug/cs/gtl/protos/geometry.proto

package cn.edu.cug.cs.gtl.protos;

/**
 * Protobuf enum {@code cn.edu.cug.cs.gtl.protos.GeometryType}
 */
public enum GeometryType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>POINT2D = 0;</code>
   */
  POINT2D(0),
  /**
   * <code>SEGMENT2D = 1;</code>
   */
  SEGMENT2D(1),
  /**
   * <code>RECTANGLE2D = 2;</code>
   */
  RECTANGLE2D(2),
  /**
   * <code>LINESTRING2D = 3;</code>
   */
  LINESTRING2D(3),
  /**
   * <code>LINEARRING2D = 4;</code>
   */
  LINEARRING2D(4),
  /**
   * <code>POLYGON2D = 5;</code>
   */
  POLYGON2D(5),
  /**
   * <code>MULTIPOINT2D = 6;</code>
   */
  MULTIPOINT2D(6),
  /**
   * <code>MULTILINESTRING2D = 7;</code>
   */
  MULTILINESTRING2D(7),
  /**
   * <code>MULTIPOLYGON2D = 8;</code>
   */
  MULTIPOLYGON2D(8),
  /**
   * <code>POINT3D = 9;</code>
   */
  POINT3D(9),
  /**
   * <code>SEGMENT3D = 10;</code>
   */
  SEGMENT3D(10),
  /**
   * <code>RECTANGLE3D = 11;</code>
   */
  RECTANGLE3D(11),
  /**
   * <code>LINESTRING3D = 12;</code>
   */
  LINESTRING3D(12),
  /**
   * <code>LINEARRING3D = 13;</code>
   */
  LINEARRING3D(13),
  /**
   * <code>POLYGON3D = 14;</code>
   */
  POLYGON3D(14),
  /**
   * <code>MULTIPOINT3D = 15;</code>
   */
  MULTIPOINT3D(15),
  /**
   * <code>MULTILINESTRING3D = 16;</code>
   */
  MULTILINESTRING3D(16),
  /**
   * <code>MULTIPOLYGON3D = 17;</code>
   */
  MULTIPOLYGON3D(17),
  /**
   * <code>TRIANGLEMESH3D = 18;</code>
   */
  TRIANGLEMESH3D(18),
  /**
   * <code>SOLID3D = 19;</code>
   */
  SOLID3D(19),
  /**
   * <code>MULTISOLID3D = 20;</code>
   */
  MULTISOLID3D(20),
  /**
   * <code>TETRAHEDRALMESH3D = 21;</code>
   */
  TETRAHEDRALMESH3D(21),
  /**
   * <code>POLYHEDRALMESH3D = 22;</code>
   */
  POLYHEDRALMESH3D(22),
  /**
   * <code>CUBICMESH3D = 23;</code>
   */
  CUBICMESH3D(23),
  /**
   * <code>HEXAHEDRALMESH3D = 24;</code>
   */
  HEXAHEDRALMESH3D(24),
  /**
   * <code>QUADMESH3D = 25;</code>
   */
  QUADMESH3D(25),
  /**
   * <code>POLYLINE3D = 26;</code>
   */
  POLYLINE3D(26),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>POINT2D = 0;</code>
   */
  public static final int POINT2D_VALUE = 0;
  /**
   * <code>SEGMENT2D = 1;</code>
   */
  public static final int SEGMENT2D_VALUE = 1;
  /**
   * <code>RECTANGLE2D = 2;</code>
   */
  public static final int RECTANGLE2D_VALUE = 2;
  /**
   * <code>LINESTRING2D = 3;</code>
   */
  public static final int LINESTRING2D_VALUE = 3;
  /**
   * <code>LINEARRING2D = 4;</code>
   */
  public static final int LINEARRING2D_VALUE = 4;
  /**
   * <code>POLYGON2D = 5;</code>
   */
  public static final int POLYGON2D_VALUE = 5;
  /**
   * <code>MULTIPOINT2D = 6;</code>
   */
  public static final int MULTIPOINT2D_VALUE = 6;
  /**
   * <code>MULTILINESTRING2D = 7;</code>
   */
  public static final int MULTILINESTRING2D_VALUE = 7;
  /**
   * <code>MULTIPOLYGON2D = 8;</code>
   */
  public static final int MULTIPOLYGON2D_VALUE = 8;
  /**
   * <code>POINT3D = 9;</code>
   */
  public static final int POINT3D_VALUE = 9;
  /**
   * <code>SEGMENT3D = 10;</code>
   */
  public static final int SEGMENT3D_VALUE = 10;
  /**
   * <code>RECTANGLE3D = 11;</code>
   */
  public static final int RECTANGLE3D_VALUE = 11;
  /**
   * <code>LINESTRING3D = 12;</code>
   */
  public static final int LINESTRING3D_VALUE = 12;
  /**
   * <code>LINEARRING3D = 13;</code>
   */
  public static final int LINEARRING3D_VALUE = 13;
  /**
   * <code>POLYGON3D = 14;</code>
   */
  public static final int POLYGON3D_VALUE = 14;
  /**
   * <code>MULTIPOINT3D = 15;</code>
   */
  public static final int MULTIPOINT3D_VALUE = 15;
  /**
   * <code>MULTILINESTRING3D = 16;</code>
   */
  public static final int MULTILINESTRING3D_VALUE = 16;
  /**
   * <code>MULTIPOLYGON3D = 17;</code>
   */
  public static final int MULTIPOLYGON3D_VALUE = 17;
  /**
   * <code>TRIANGLEMESH3D = 18;</code>
   */
  public static final int TRIANGLEMESH3D_VALUE = 18;
  /**
   * <code>SOLID3D = 19;</code>
   */
  public static final int SOLID3D_VALUE = 19;
  /**
   * <code>MULTISOLID3D = 20;</code>
   */
  public static final int MULTISOLID3D_VALUE = 20;
  /**
   * <code>TETRAHEDRALMESH3D = 21;</code>
   */
  public static final int TETRAHEDRALMESH3D_VALUE = 21;
  /**
   * <code>POLYHEDRALMESH3D = 22;</code>
   */
  public static final int POLYHEDRALMESH3D_VALUE = 22;
  /**
   * <code>CUBICMESH3D = 23;</code>
   */
  public static final int CUBICMESH3D_VALUE = 23;
  /**
   * <code>HEXAHEDRALMESH3D = 24;</code>
   */
  public static final int HEXAHEDRALMESH3D_VALUE = 24;
  /**
   * <code>QUADMESH3D = 25;</code>
   */
  public static final int QUADMESH3D_VALUE = 25;
  /**
   * <code>POLYLINE3D = 26;</code>
   */
  public static final int POLYLINE3D_VALUE = 26;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static GeometryType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static GeometryType forNumber(int value) {
    switch (value) {
      case 0: return POINT2D;
      case 1: return SEGMENT2D;
      case 2: return RECTANGLE2D;
      case 3: return LINESTRING2D;
      case 4: return LINEARRING2D;
      case 5: return POLYGON2D;
      case 6: return MULTIPOINT2D;
      case 7: return MULTILINESTRING2D;
      case 8: return MULTIPOLYGON2D;
      case 9: return POINT3D;
      case 10: return SEGMENT3D;
      case 11: return RECTANGLE3D;
      case 12: return LINESTRING3D;
      case 13: return LINEARRING3D;
      case 14: return POLYGON3D;
      case 15: return MULTIPOINT3D;
      case 16: return MULTILINESTRING3D;
      case 17: return MULTIPOLYGON3D;
      case 18: return TRIANGLEMESH3D;
      case 19: return SOLID3D;
      case 20: return MULTISOLID3D;
      case 21: return TETRAHEDRALMESH3D;
      case 22: return POLYHEDRALMESH3D;
      case 23: return CUBICMESH3D;
      case 24: return HEXAHEDRALMESH3D;
      case 25: return QUADMESH3D;
      case 26: return POLYLINE3D;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<GeometryType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      GeometryType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<GeometryType>() {
          public GeometryType findValueByNumber(int number) {
            return GeometryType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return cn.edu.cug.cs.gtl.protos.Geometries.getDescriptor().getEnumTypes().get(0);
  }

  private static final GeometryType[] VALUES = values();

  public static GeometryType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private GeometryType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:cn.edu.cug.cs.gtl.protos.GeometryType)
}

